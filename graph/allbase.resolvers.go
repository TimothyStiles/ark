package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.22

import (
	"context"

	"github.com/TimothyStiles/allbase/pkg/retsynth"
)

// Compounds is the resolver for the compounds field.
func (r *queryResolver) Compounds(ctx context.Context) ([]*retsynth.Compound, error) {
	// Query the database for all compounds.
	var compounds = retsynth.GetAllCompounds()
	// convert from []*retsynth.Compound to []*retsynth.Compound
	var returnCompounds []*retsynth.Compound
	for _, compound := range compounds {
		returnCompounds = append(returnCompounds, &compound)
	}
	return returnCompounds, nil
}

// Organisms is the resolver for the organisms field.
func (r *queryResolver) Organisms(ctx context.Context) ([]*retsynth.Model, error) {
	var models = retsynth.GetAllModels()
	var returnModels []*retsynth.Model
	for _, model := range models {
		returnModels = append(returnModels, &model)
	}
	return returnModels, nil
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
